##################################################################
# Generic code - change only image e.g 'react-alpine3.17:1'
# base - run without tests
# run_test - run with tests
#----------------------------------------------------------------#
ARG base_image=node:19-alpine3.17
ARG docker_test=base
ARG docker_user=dockerusr
ARG docker_group=docker
#----------------------------------------------------------------#
##################################################################

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 
# Stage 1 - base
##################################################################
# Generic code 
#----------------------------------------------------------------#
FROM ${base_image} as base
ARG docker_user
ARG docker_group
WORKDIR /src
#----------------------------------------------------------------#
##################################################################

##################################################################
# CUSTOM code
#----------------------------------------------------------------#
COPY --chown=${docker_user}:${docker_group} package.json ./
COPY --chown=${docker_user}:${docker_group} yarn.lock ./
RUN yarn install
COPY --chown=${docker_user}:${docker_group} . .
RUN yarn build
#----------------------------------------------------------------#
##################################################################
# Generic code 
#----------------------------------------------------------------#
#----------------------------------------------------------------#
##################################################################
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#  
# Stage 2 - run_test 
# All testes are performed here
##################################################################
# Generic code
#----------------------------------------------------------------#
FROM base as run_test
WORKDIR /src
#----------------------------------------------------------------#
##################################################################

##################################################################
# CUSTOM code
#----------------------------------------------------------------#
RUN yarn lint:fix \
    && yarn health-check \
    && yarn test
#----------------------------------------------------------------#
##################################################################
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 
# Stage 3 - release
# Choose stage 1/2 or stage 1 only (based on docker_test)
##################################################################
# Generic code
#----------------------------------------------------------------#
FROM ${docker_test} as release
#----------------------------------------------------------------#
##################################################################
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 
# Stage 4 - final
# build final image
##################################################################
# Generic code
#----------------------------------------------------------------#
FROM ${base_image} as final
ARG docker_user
ARG docker_group
USER ${docker_user}
WORKDIR /app
COPY --chown=${docker_user}:${docker_group} --from=release /src .
#----------------------------------------------------------------#
##################################################################

##################################################################
# CUSTOM code
#----------------------------------------------------------------#
RUN yarn install
EXPOSE 3333
CMD ["yarn", "start"]
#----------------------------------------------------------------#
##################################################################
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# 